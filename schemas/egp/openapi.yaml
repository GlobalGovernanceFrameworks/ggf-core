# docs/specs/openapi.yaml
openapi: 3.0.3
info:
  title: Emergent Governance Protocol API
  description: |
    The minimum viable grammar for governance coordination.
    Three simple verbs: sense(), propose(), adopt().
  version: 0.1.0-alpha
  contact:
    name: EGP Community
    url: https://egp.org
    email: hello@globalgovernanceframeworks.org
  license:
    name: CC BY-SA 4.0
    url: https://creativecommons.org/licenses/by-sa/4.0/

servers:
  - url: http://localhost:4010
    description: Local mock server
  - url: https://api.egp.org/v1
    description: Production API

paths:
  /sense:
    post:
      summary: File a systemic signal
      description: |
        The art of noticing. Submit a distress signal, love letter, or data pulse
        to flag systemic opportunities or problems.
      tags:
        - Sensing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SenseInput"
            example:
              issue: "water_shortage"
              title: "The well is dry"
              scope: "village:llajta"
              evidence:
                sensor_data: "pH 9.2"
                oral_history: "Elder María says this hasn't happened in 70 years"
              urgency: "3/5"
              tags: ["water", "climate", "indigenous_knowledge"]
      responses:
        201:
          description: Signal created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SenseOutput"
          headers:
            Location:
              description: URI of the new sense signal
              schema:
                type: string
                example: "/sense/123"
        400:
          description: Invalid input
        403:
          description: Unauthorized (invalid/missing DID token)

  /propose:
    post:
      summary: Submit a solution proposal
      description: |
        The art of offering. Anyone (human, AI, or institution) can propose 
        a response to a sense() signal. Proposals are time-bound experiments 
        with clear success metrics.
      tags:
        - Proposals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProposeInput"
            example:
              title: "Moonlight Water Sharing"
              in_response_to: "/sense/123"
              solution:
                description: "Farmers take turns at night to reduce evaporation"
                format: "text/markdown"
                content: "![Moonlit irrigation sketch](...)"
              test: "Conflict drops 20% in 2mo"
              sunset: "P6M"
              resources:
                needed: ["jugs", "volunteers"]
                offered: ["land_access", "elders_council"]
      responses:
        201:
          description: Proposal created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProposeOutput"
          headers:
            Location:
              description: URI of the new proposal
              schema:
                type: string
                example: "/propose/456"
        400:
          description: Invalid input (e.g., missing `in_response_to`)
        403:
          description: Unauthorized (invalid/missing DID token)
        404:
          description: Referenced sense signal not found

  /adopt:
    post:
      summary: Adopt a proposal as time-bound experiment
      description: |
        The art of temporary commitment. A community or institution adopts 
        a proposal as a temporary commitment, creating a time-bound experiment 
        with monitoring and success criteria.
      tags:
        - Adoptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdoptInput"
            example:
              proposal_uri: "/propose/456"
              decision_process:
                type: "consent"
                record: "QmXyZ..."
              modifications:
                sunset: "P3M"
                test: "Conflict drops 10%"
              monitoring:
                who: ["water_council", "youth_group"]
                frequency: "P1W"
      responses:
        201:
          description: Adoption created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdoptOutput"
          headers:
            Location:
              description: URI of the new adoption
              schema:
                type: string
                example: "/adopt/789"
        400:
          description: Invalid input (e.g., invalid proposal_uri)
        403:
          description: Unauthorized (invalid/missing DID token)
        404:
          description: Proposal not found

components:
  schemas:
    SenseInput:
      type: object
      required: [issue, scope]
      properties:
        issue:
          type: string
          description: Machine-readable issue ID
          example: "water_shortage"
        title:
          type: string
          description: Human-readable title
          example: "The well is dry"
        scope:
          type: string
          description: GPS, bioregion, or community ID
          example: "village:llajta"
        evidence:
          type: object
          description: Flexible proof of the issue
          additionalProperties: true
          example:
            sensor_data: "pH 9.2"
            oral_history: "Elder María says this hasn't happened in 70 years"
        urgency:
          type: string
          description: Urgency level (1=chronic, 5=catastrophic)
          example: "3/5"
        tags:
          type: array
          items:
            type: string
          description: Searchable tags
          example: ["water", "climate", "indigenous_knowledge"]

    SenseOutput:
      type: object
      properties:
        id:
          type: string
          description: Content-addressed ID (IPFS CID)
          example: "bafyrei..."
        timestamp:
          type: string
          format: date-time
          description: When the sense signal was created
          example: "2025-07-24T12:34:56Z"
        relates_to:
          type: array
          items:
            type: string
            format: uri-reference
          description: URIs of related sense signals
          example: ["/sense/101"]
        echoes:
          type: integer
          description: Number of similar sense calls nearby
          example: 42
        actions:
          type: object
          description: Suggested next steps and related resources
          properties:
            propose_template:
              type: string
              format: uri-reference
              description: Pre-filled proposal template
              example: "/propose?from_sense=123"
            local_healers:
              type: string
              format: uri-reference
              description: Relevant people or resources
              example: "/people?skills=water_rituals"
          additionalProperties:
            type: string
            description: Other contextual actions or resources

    ProposeInput:
      type: object
      required:
        - title
        - in_response_to
        - solution
        - test
        - sunset
      properties:
        title:
          type: string
          description: Human-readable name
          example: "Moonlight Water Sharing"
        in_response_to:
          type: string
          description: URI of the sense() call this addresses
          format: uri-reference
          example: "/sense/123"
        solution:
          type: object
          required:
            - description
            - format
          properties:
            description:
              type: string
              example: "Farmers take turns at night"
            format:
              type: string
              description: MIME type of the solution content
              example: "text/markdown"
            content:
              type: string
              description: Base64-encoded if binary
              example: "![sketch](data:image/png;base64,...)"
        test:
          type: string
          description: Success criteria (human or machine-readable)
          example: "Conflict drops 20% in 2mo"
        sunset:
          type: string
          description: ISO 8601 duration until auto-expiry
          example: "P6M"
        resources:
          type: object
          properties:
            needed:
              type: array
              items:
                type: string
              example: ["jugs", "volunteers"]
            offered:
              type: array
              items:
                type: string
              example: ["land_access", "elders_council"]

    ProposeOutput:
      type: object
      properties:
        id:
          type: string
          description: Content-addressed ID (IPFS CID)
          example: "bafkrei..."
        echoes:
          type: integer
          description: Similar proposals in this context
          example: 5
        conflicts:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "/propose/101"
              reason:
                type: string
                example: "overlaps_land_use"
        rituals:
          type: object
          description: Cultural protocols for adoption
          properties:
            consent_process:
              type: string
              example: "/rituals/water_council"
            offering_required:
              type: string
              example: "tobacco_bundle"

    AdoptInput:
      type: object
      required:
        - proposal_uri
        - decision_process
      properties:
        proposal_uri:
          type: string
          description: URI of the proposal being adopted
          format: uri-reference
          example: "/propose/456"
        decision_process:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              description: Type of decision-making process used
              enum: ["consent", "majority", "elder_council", "token_vote", "oral_tradition"]
              example: "consent"
            record:
              type: string
              description: IPFS hash or other reference to decision record
              example: "QmXyZ..."
        modifications:
          type: object
          description: Optional modifications to the original proposal
          properties:
            sunset:
              type: string
              description: Modified duration (ISO 8601)
              example: "P3M"
            test:
              type: string
              description: Adjusted success metric
              example: "Conflict drops 10%"
        monitoring:
          type: object
          description: Monitoring plan for the adoption
          properties:
            who:
              type: array
              items:
                type: string
              description: Groups responsible for monitoring
              example: ["water_council", "youth_group"]
            frequency:
              type: string
              description: How often to check progress (ISO 8601 duration)
              example: "P1W"

    AdoptOutput:
      type: object
      properties:
        id:
          type: string
          description: Content-addressed ID (IPFS CID)
          example: "bafy..."
        trial_period:
          type: object
          properties:
            starts:
              type: string
              format: date
              example: "2025-08-01"
            ends:
              type: string
              format: date
              example: "2025-11-01"
            review_at:
              type: array
              items:
                type: string
                format: date
              description: Scheduled check-in dates
              example: ["2025-09-01", "2025-10-01"]
        revocation_conditions:
          type: array
          items:
            type: object
            properties:
              if:
                type: string
                description: Condition that triggers revocation
                example: "conflict > 30%"
              then:
                type: string
                description: Action to take
                example: "auto_revert"
              recorded_by:
                type: string
                description: Who/what monitors this condition
                example: "sensor:water_disputes"
        learning_archive:
          type: string
          description: IPFS URI for shared learning documentation
          example: "/ipfs/QmLearn..."

  securitySchemes:
    DID_Bearer:
      type: http
      scheme: bearer
      bearerFormat: DID
      description: Decentralized Identifier (DID) token
    UCAN_Bearer:
      type: http
      scheme: bearer  
      bearerFormat: UCAN
      description: User Controlled Authorization Network token

security:
  - DID_Bearer: []
  - UCAN_Bearer: []

tags:
  - name: Sensing
    description: The art of noticing - detecting systemic signals
  - name: Proposals
    description: The art of offering - suggesting solutions
  - name: Adoptions
    description: The art of temporary commitment - implementing experiments
